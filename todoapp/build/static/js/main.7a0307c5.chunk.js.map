{"version":3,"sources":["apis/index.js","components/Form.js","components/Todo.js","components/List.js","components/Section.js","App.js","index.js"],"names":["axios","create","baseURL","Form","addTodo","useState","inputValue","setInputValue","className","onSubmit","e","preventDefault","trim","title","completed","value","onChange","target","type","placeholder","Todo","removeTodoItemProp","editTodoItemProp","isEditing","setIsEditing","setValue","tempValue","setTempValue","completedState","setCompleted","onKeyDown","key","keyCode","autoFocus","onDoubleClick","onClick","oldCompleted","newState","List","list","removeTodoListProp","editTodoListProp","renderedList","map","item","_id","updatedItem","Section","children","style","margin","App","todoList","setTodoList","useEffect","a","todos","get","data","fetchData","post","oldList","removeTodo","id","delete","filter","editTodo","put","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.7a0307c5.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL: \"http://localhost:3030\"\r\n});","import React, { useState } from \"react\";\r\n\r\nconst Form = ({ addTodo }) => {\r\n    const [inputValue, setInputValue] =useState(\"\");\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleFormSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim() === \"\") return;\r\n\r\n        addTodo({ title: inputValue, completed: false });\r\n        setInputValue(\"\");\r\n    };\r\n    \r\n    return (\r\n        <form className=\"ui form\" onSubmit={handleFormSubmit}>\r\n            <div className=\"ui grid center aligned\">\r\n                <div className=\"row\">\r\n                    <div className=\"column five wide\">\r\n                        <input \r\n                        value={inputValue}\r\n                        onChange={handleInputChange}\r\n                        type=\"text\" \r\n                        placeholder=\"Enter something to do...\" \r\n                        />\r\n                    </div>\r\n                    <div className=\"column one wide\">\r\n                        <button type=\"submit\" className=\"ui button circular icon green\"><i className=\"white plus icon\"></i></button>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;","import React, { useState } from \"react\";\r\n\r\nconst Todo = ({ title, completed, removeTodoItemProp, editTodoItemProp }) => {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [value, setValue] = useState(title);\r\n    const [tempValue, setTempValue] = useState(title);\r\n    const [completedState, setCompleted] = useState(completed);\r\n\r\n    const handleDivDoubleClick = () => {\r\n        setIsEditing(true);\r\n    };\r\n\r\n    const handleInputKeyDown = (e) => {\r\n        const key = e.keyCode;\r\n\r\n        if (key === 13) {\r\n            editTodoItemProp({ title: tempValue });\r\n            setValue(tempValue);\r\n            setIsEditing(false);\r\n        } else if (key === 27) {\r\n            setTempValue(value);\r\n            setIsEditing(false);\r\n        }\r\n    };\r\n\r\n    const handleInputOnChange = (e) => {\r\n        setTempValue(e.target.value);\r\n    };\r\n\r\n    const handleButtonClick = () => {\r\n        setCompleted((oldCompleted) => {\r\n            const newState = !oldCompleted;\r\n            editTodoItemProp({ completed: newState });\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            {\r\n                isEditing ?\r\n                    <div className=\"column seven wide\">\r\n                        <div className=\"ui input fluid\">\r\n                            <input\r\n                                onChange={handleInputOnChange}\r\n                                onKeyDown={handleInputKeyDown}\r\n                                autoFocus={true}\r\n                                value={tempValue}\r\n                            />\r\n                        </div>\r\n                    </div> :\r\n                    <>\r\n                        <div className=\"column five wide\" onDoubleClick={handleDivDoubleClick}>\r\n                            <h2 className={\"ui header\" + (completedState ? \" green\" : \"\")}>{value}</h2>\r\n                        </div>\r\n\r\n                        <div className=\"column one wide\">\r\n                            <button \r\n                            className={\"ui button circular icon\" + (completedState ? \" blue\" : \" green\") }\r\n                            onClick={handleButtonClick}\r\n                            >\r\n                                <i className=\"white check icon\"></i>\r\n                            </button>\r\n                        </div>\r\n\r\n                        <div className=\"column one wide\">\r\n                            <button \r\n                            onClick={removeTodoItemProp}\r\n                            className=\"ui button circular icon red\"\r\n                            >\r\n                                <i className=\"white remove icon\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Todo;","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nconst List = ({ list, removeTodoListProp, editTodoListProp }) => {\r\n    const renderedList = list.map(\r\n        (item) => (\r\n        <Todo \r\n        title={item.title} \r\n        completed={item.completed}\r\n        removeTodoItemProp={(e) => removeTodoListProp(item._id)}\r\n        editTodoItemProp={(updatedItem) => editTodoListProp(item._id, updatedItem)}\r\n        key={item.title} \r\n        />\r\n        )\r\n        );\r\n    return(\r\n        <div className=\"ui grid center aligned\">\r\n            {renderedList}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default List;","import React from \"react\";\r\n\r\nconst Section = ({ children }) => {\r\n    return(\r\n        <div style={{ margin: \"50px\" }}>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Section;","// import axios from \"axios\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport todos from \"./apis\";\r\n\r\nimport Form from \"./components/Form\";\r\nimport List from \"./components/List\";\r\nimport Section from \"./components/Section\";\r\n\r\nconst appTitle = \"To-Do App\";\r\n\r\n// const list = [\r\n//     { id: 1, title: \"Test #1\", completed: false },\r\n//     { id: 2, title: \"Test #2\", completed: false },\r\n//     { id: 3, title: \"Test #3\", completed: false }\r\n// ];\r\n\r\nconst App = () => {\r\n    const [todoList, setTodoList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const { data } = await todos.get(\"/todos\");\r\n            setTodoList(data);\r\n        }\r\n        \r\n        fetchData();\r\n        ////////////////////Simultaneous way to fetch the data/////////////////////////\r\n        //     (async function () {\r\n        //         const response = await axios.get(\"http://localhost:3030/todos/\");\r\n        //         console.log(response);\r\n        //     })();\r\n    }, []);\r\n\r\n    const addTodo = async (item) => {\r\n        const { data } = await todos.post(\"/todos\", item);\r\n        setTodoList((oldList) => [...oldList, data]);\r\n    };\r\n\r\n    const removeTodo = async (id) => {\r\n        await todos.delete(`/todos/${id}`);\r\n        setTodoList((oldList) => oldList.filter((item) => item._id !== id));\r\n    };\r\n\r\n    const editTodo = async (id, item) => {\r\n        await todos.put(`/todos/${id}`, item);\r\n    };\r\n\r\n    return (\r\n    <div className=\"ui container center aligned\">\r\n        <Section>\r\n            <h1>{appTitle}</h1>\r\n        </Section>\r\n        \r\n        <Section>\r\n            <Form addTodo={addTodo}/>\r\n        </Section>\r\n\r\n        <Section>\r\n            <List \r\n            editTodoListProp={editTodo}\r\n            removeTodoListProp={removeTodo} \r\n            list={todoList}\r\n            />\r\n        </Section>\r\n    </div>\r\n        );\r\n};\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));"],"sourceRoot":""}